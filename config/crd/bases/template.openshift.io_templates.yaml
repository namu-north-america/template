---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: templates.template.openshift.io
spec:
  group: template.openshift.io
  names:
    kind: Template
    listKind: TemplateList
    plural: templates
    singular: template
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: |-
          Template is the Schema for the templates API.
          It mimics the OpenShift template structure with top-level 'objects' and 'parameters'.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          objects:
            description: Objects contains a list of resources to be instantiated when
              processing the template.
            items:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            type: array
            x-kubernetes-preserve-unknown-fields: true
          parameters:
            description: Parameters defines the input parameters for this template.
            items:
              description: TemplateParameter defines a template input parameter.
              properties:
                description:
                  description: Description of the parameter.
                  type: string
                from:
                  description: From is an expression used to generate the value.
                  type: string
                generate:
                  description: Generate indicates how the value should be generated.
                  type: string
                name:
                  description: Name is the parameter name.
                  type: string
                value:
                  description: Value is the default value.
                  type: string
              required:
              - name
              type: object
            type: array
          status:
            description: Status defines the observed state of the template.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
